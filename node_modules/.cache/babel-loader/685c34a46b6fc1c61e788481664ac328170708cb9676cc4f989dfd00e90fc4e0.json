{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rkdgu\\\\Desktop\\\\myApp\\\\src\\\\pages\\\\loginForm\\\\NaverLogin.js\";\nimport React, { Component } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nclass NaverLogin extends Component {\n  componentDidMount() {\n    // Naver sdk import\n    const naverScript = document.createElement(\"script\");\n    naverScript.src = \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    naverScript.type = \"text/javascript\";\n    document.head.appendChild(naverScript);\n\n    // Naver sdk 스크립트 로드 완료시\n    naverScript.onload = () => {\n      const naverLogin = new window.naver.LoginWithNaverId({\n        clientId: \"nlgdIwCIkJWqjjJYv6n7\",\n        callbackUrl: \"http://localhost:3000/login\",\n        callbackHandle: true,\n        isPopup: false,\n        // 로그인 팝업여부\n        loginButton: {\n          color: \"green\",\n          // 색상(white, green)\n          type: 3,\n          // 버튼타입(1,2,3)\n          height: 60 // 배너 및 버튼 높이\n        }\n      });\n\n      naverLogin.init();\n      naverLogin.logout(); // 네이버 로그인이 계속 유지되는 경우가 있다. 초기화시 로그아웃\n      naverLogin.getLoginStatus(status => {\n        if (status) {\n          console.log(\"Naver 로그인 상태\", naverLogin.user);\n          const {\n            id,\n            email,\n            gender\n          } = naverLogin.user;\n\n          // 필수 제공 동의 조건\n          if (gender == undefined) {\n            alert(\"성별은 필수 동의 입니다. 정보제공을 동의해주세요.\");\n            naverLogin.reprompt();\n            return;\n          }\n        } else {\n          console.log(\"Naver 비 로그인 상태\");\n        }\n      });\n    };\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"naverIdLogin\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, this);\n  }\n}\nexport default NaverLogin;","map":{"version":3,"names":["React","Component","NaverLogin","componentDidMount","naverScript","document","createElement","src","type","head","appendChild","onload","naverLogin","window","naver","LoginWithNaverId","clientId","callbackUrl","callbackHandle","isPopup","loginButton","color","height","init","logout","getLoginStatus","status","console","log","user","id","email","gender","undefined","alert","reprompt","render"],"sources":["C:/Users/rkdgu/Desktop/myApp/src/pages/loginForm/NaverLogin.js"],"sourcesContent":["import React, { Component } from \"react\";\n\nclass NaverLogin extends Component {\n  componentDidMount() {\n    // Naver sdk import\n    const naverScript = document.createElement(\"script\");\n    naverScript.src =\n      \"https://static.nid.naver.com/js/naveridlogin_js_sdk_2.0.2.js\";\n    naverScript.type = \"text/javascript\";\n    document.head.appendChild(naverScript);\n\n    // Naver sdk 스크립트 로드 완료시\n    naverScript.onload = () => {\n      const naverLogin = new window.naver.LoginWithNaverId({\n        clientId: \"nlgdIwCIkJWqjjJYv6n7\",\n        callbackUrl: \"http://localhost:3000/login\",\n        callbackHandle: true,\n        isPopup: false, // 로그인 팝업여부\n        loginButton: {\n          color: \"green\", // 색상(white, green)\n          type: 3, // 버튼타입(1,2,3)\n          height: 60, // 배너 및 버튼 높이\n        },\n      });\n\n      naverLogin.init();\n      naverLogin.logout(); // 네이버 로그인이 계속 유지되는 경우가 있다. 초기화시 로그아웃\n      naverLogin.getLoginStatus((status) => {\n        if (status) {\n          console.log(\"Naver 로그인 상태\", naverLogin.user);\n          const { id, email, gender } = naverLogin.user;\n\n          // 필수 제공 동의 조건\n          if (gender == undefined) {\n            alert(\"성별은 필수 동의 입니다. 정보제공을 동의해주세요.\");\n            naverLogin.reprompt();\n            return;\n          }\n        } else {\n          console.log(\"Naver 비 로그인 상태\");\n        }\n      });\n    };\n  }\n\n  render() {\n    return <div id=\"naverIdLogin\"></div>;\n  }\n}\n\nexport default NaverLogin;"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AAAC;AAEzC,MAAMC,UAAU,SAASD,SAAS,CAAC;EACjCE,iBAAiB,GAAG;IAClB;IACA,MAAMC,WAAW,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IACpDF,WAAW,CAACG,GAAG,GACb,8DAA8D;IAChEH,WAAW,CAACI,IAAI,GAAG,iBAAiB;IACpCH,QAAQ,CAACI,IAAI,CAACC,WAAW,CAACN,WAAW,CAAC;;IAEtC;IACAA,WAAW,CAACO,MAAM,GAAG,MAAM;MACzB,MAAMC,UAAU,GAAG,IAAIC,MAAM,CAACC,KAAK,CAACC,gBAAgB,CAAC;QACnDC,QAAQ,EAAE,sBAAsB;QAChCC,WAAW,EAAE,6BAA6B;QAC1CC,cAAc,EAAE,IAAI;QACpBC,OAAO,EAAE,KAAK;QAAE;QAChBC,WAAW,EAAE;UACXC,KAAK,EAAE,OAAO;UAAE;UAChBb,IAAI,EAAE,CAAC;UAAE;UACTc,MAAM,EAAE,EAAE,CAAE;QACd;MACF,CAAC,CAAC;;MAEFV,UAAU,CAACW,IAAI,EAAE;MACjBX,UAAU,CAACY,MAAM,EAAE,CAAC,CAAC;MACrBZ,UAAU,CAACa,cAAc,CAAEC,MAAM,IAAK;QACpC,IAAIA,MAAM,EAAE;UACVC,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEhB,UAAU,CAACiB,IAAI,CAAC;UAC5C,MAAM;YAAEC,EAAE;YAAEC,KAAK;YAAEC;UAAO,CAAC,GAAGpB,UAAU,CAACiB,IAAI;;UAE7C;UACA,IAAIG,MAAM,IAAIC,SAAS,EAAE;YACvBC,KAAK,CAAC,8BAA8B,CAAC;YACrCtB,UAAU,CAACuB,QAAQ,EAAE;YACrB;UACF;QACF,CAAC,MAAM;UACLR,OAAO,CAACC,GAAG,CAAC,gBAAgB,CAAC;QAC/B;MACF,CAAC,CAAC;IACJ,CAAC;EACH;EAEAQ,MAAM,GAAG;IACP,oBAAO;MAAK,EAAE,EAAC;IAAc;MAAA;MAAA;MAAA;IAAA,QAAO;EACtC;AACF;AAEA,eAAelC,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}